//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("EmptyHandDBModel", "FK_GameActualRound", "GameRounds", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataService.GameRound), "GameHeaders", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataService.GameHeader), true)]

#endregion

namespace DataService
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EmptyHandDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EmptyHandDBEntities object using the connection string found in the 'EmptyHandDBEntities' section of the application configuration file.
        /// </summary>
        public EmptyHandDBEntities() : base("name=EmptyHandDBEntities", "EmptyHandDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmptyHandDBEntities object.
        /// </summary>
        public EmptyHandDBEntities(string connectionString) : base(connectionString, "EmptyHandDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EmptyHandDBEntities object.
        /// </summary>
        public EmptyHandDBEntities(EntityConnection connection) : base(connection, "EmptyHandDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameHeader> GameHeaders
        {
            get
            {
                if ((_GameHeaders == null))
                {
                    _GameHeaders = base.CreateObjectSet<GameHeader>("GameHeaders");
                }
                return _GameHeaders;
            }
        }
        private ObjectSet<GameHeader> _GameHeaders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GameRound> GameRounds
        {
            get
            {
                if ((_GameRounds == null))
                {
                    _GameRounds = base.CreateObjectSet<GameRound>("GameRounds");
                }
                return _GameRounds;
            }
        }
        private ObjectSet<GameRound> _GameRounds;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameHeaders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameHeaders(GameHeader gameHeader)
        {
            base.AddObject("GameHeaders", gameHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GameRounds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGameRounds(GameRound gameRound)
        {
            base.AddObject("GameRounds", gameRound);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmptyHandDBModel", Name="GameHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameHeader object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="playerPoints">Initial value of the PlayerPoints property.</param>
        /// <param name="playerRoundsWins">Initial value of the PlayerRoundsWins property.</param>
        /// <param name="player2Points">Initial value of the Player2Points property.</param>
        /// <param name="player2RoundsWins">Initial value of the Player2RoundsWins property.</param>
        /// <param name="roundsCount">Initial value of the RoundsCount property.</param>
        /// <param name="actualRoundId">Initial value of the ActualRoundId property.</param>
        public static GameHeader CreateGameHeader(global::System.Guid gameId, global::System.String playerId, global::System.Int32 playerPoints, global::System.Int32 playerRoundsWins, global::System.Int32 player2Points, global::System.Int32 player2RoundsWins, global::System.Int32 roundsCount, global::System.Guid actualRoundId)
        {
            GameHeader gameHeader = new GameHeader();
            gameHeader.GameId = gameId;
            gameHeader.PlayerId = playerId;
            gameHeader.PlayerPoints = playerPoints;
            gameHeader.PlayerRoundsWins = playerRoundsWins;
            gameHeader.Player2Points = player2Points;
            gameHeader.Player2RoundsWins = player2RoundsWins;
            gameHeader.RoundsCount = roundsCount;
            gameHeader.ActualRoundId = actualRoundId;
            return gameHeader;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value, "GameId");
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Guid _GameId;
        partial void OnGameIdChanging(global::System.Guid value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value, false, "PlayerId");
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private global::System.String _PlayerId;
        partial void OnPlayerIdChanging(global::System.String value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Player2Id
        {
            get
            {
                return _Player2Id;
            }
            set
            {
                OnPlayer2IdChanging(value);
                ReportPropertyChanging("Player2Id");
                _Player2Id = StructuralObject.SetValidValue(value, true, "Player2Id");
                ReportPropertyChanged("Player2Id");
                OnPlayer2IdChanged();
            }
        }
        private global::System.String _Player2Id;
        partial void OnPlayer2IdChanging(global::System.String value);
        partial void OnPlayer2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerPoints
        {
            get
            {
                return _PlayerPoints;
            }
            set
            {
                OnPlayerPointsChanging(value);
                ReportPropertyChanging("PlayerPoints");
                _PlayerPoints = StructuralObject.SetValidValue(value, "PlayerPoints");
                ReportPropertyChanged("PlayerPoints");
                OnPlayerPointsChanged();
            }
        }
        private global::System.Int32 _PlayerPoints;
        partial void OnPlayerPointsChanging(global::System.Int32 value);
        partial void OnPlayerPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerRoundsWins
        {
            get
            {
                return _PlayerRoundsWins;
            }
            set
            {
                OnPlayerRoundsWinsChanging(value);
                ReportPropertyChanging("PlayerRoundsWins");
                _PlayerRoundsWins = StructuralObject.SetValidValue(value, "PlayerRoundsWins");
                ReportPropertyChanged("PlayerRoundsWins");
                OnPlayerRoundsWinsChanged();
            }
        }
        private global::System.Int32 _PlayerRoundsWins;
        partial void OnPlayerRoundsWinsChanging(global::System.Int32 value);
        partial void OnPlayerRoundsWinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player2Points
        {
            get
            {
                return _Player2Points;
            }
            set
            {
                OnPlayer2PointsChanging(value);
                ReportPropertyChanging("Player2Points");
                _Player2Points = StructuralObject.SetValidValue(value, "Player2Points");
                ReportPropertyChanged("Player2Points");
                OnPlayer2PointsChanged();
            }
        }
        private global::System.Int32 _Player2Points;
        partial void OnPlayer2PointsChanging(global::System.Int32 value);
        partial void OnPlayer2PointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Player2RoundsWins
        {
            get
            {
                return _Player2RoundsWins;
            }
            set
            {
                OnPlayer2RoundsWinsChanging(value);
                ReportPropertyChanging("Player2RoundsWins");
                _Player2RoundsWins = StructuralObject.SetValidValue(value, "Player2RoundsWins");
                ReportPropertyChanged("Player2RoundsWins");
                OnPlayer2RoundsWinsChanged();
            }
        }
        private global::System.Int32 _Player2RoundsWins;
        partial void OnPlayer2RoundsWinsChanging(global::System.Int32 value);
        partial void OnPlayer2RoundsWinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundsCount
        {
            get
            {
                return _RoundsCount;
            }
            set
            {
                OnRoundsCountChanging(value);
                ReportPropertyChanging("RoundsCount");
                _RoundsCount = StructuralObject.SetValidValue(value, "RoundsCount");
                ReportPropertyChanged("RoundsCount");
                OnRoundsCountChanged();
            }
        }
        private global::System.Int32 _RoundsCount;
        partial void OnRoundsCountChanging(global::System.Int32 value);
        partial void OnRoundsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActualRoundId
        {
            get
            {
                return _ActualRoundId;
            }
            set
            {
                OnActualRoundIdChanging(value);
                ReportPropertyChanging("ActualRoundId");
                _ActualRoundId = StructuralObject.SetValidValue(value, "ActualRoundId");
                ReportPropertyChanged("ActualRoundId");
                OnActualRoundIdChanged();
            }
        }
        private global::System.Guid _ActualRoundId;
        partial void OnActualRoundIdChanging(global::System.Guid value);
        partial void OnActualRoundIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmptyHandDBModel", "FK_GameActualRound", "GameRounds")]
        public GameRound GameRound
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameRound>("EmptyHandDBModel.FK_GameActualRound", "GameRounds").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameRound>("EmptyHandDBModel.FK_GameActualRound", "GameRounds").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GameRound> GameRoundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GameRound>("EmptyHandDBModel.FK_GameActualRound", "GameRounds");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GameRound>("EmptyHandDBModel.FK_GameActualRound", "GameRounds", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EmptyHandDBModel", Name="GameRound")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GameRound : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GameRound object.
        /// </summary>
        /// <param name="gameRoundId">Initial value of the GameRoundId property.</param>
        /// <param name="availableCards">Initial value of the AvailableCards property.</param>
        /// <param name="playerCards">Initial value of the PlayerCards property.</param>
        /// <param name="playerLifeCards">Initial value of the PlayerLifeCards property.</param>
        /// <param name="player2Cards">Initial value of the Player2Cards property.</param>
        /// <param name="player2LifeCards">Initial value of the Player2LifeCards property.</param>
        /// <param name="cardPits">Initial value of the CardPits property.</param>
        public static GameRound CreateGameRound(global::System.Guid gameRoundId, global::System.String availableCards, global::System.String playerCards, global::System.String playerLifeCards, global::System.String player2Cards, global::System.String player2LifeCards, global::System.String cardPits)
        {
            GameRound gameRound = new GameRound();
            gameRound.GameRoundId = gameRoundId;
            gameRound.AvailableCards = availableCards;
            gameRound.PlayerCards = playerCards;
            gameRound.PlayerLifeCards = playerLifeCards;
            gameRound.Player2Cards = player2Cards;
            gameRound.Player2LifeCards = player2LifeCards;
            gameRound.CardPits = cardPits;
            return gameRound;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GameRoundId
        {
            get
            {
                return _GameRoundId;
            }
            set
            {
                if (_GameRoundId != value)
                {
                    OnGameRoundIdChanging(value);
                    ReportPropertyChanging("GameRoundId");
                    _GameRoundId = StructuralObject.SetValidValue(value, "GameRoundId");
                    ReportPropertyChanged("GameRoundId");
                    OnGameRoundIdChanged();
                }
            }
        }
        private global::System.Guid _GameRoundId;
        partial void OnGameRoundIdChanging(global::System.Guid value);
        partial void OnGameRoundIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AvailableCards
        {
            get
            {
                return _AvailableCards;
            }
            set
            {
                OnAvailableCardsChanging(value);
                ReportPropertyChanging("AvailableCards");
                _AvailableCards = StructuralObject.SetValidValue(value, false, "AvailableCards");
                ReportPropertyChanged("AvailableCards");
                OnAvailableCardsChanged();
            }
        }
        private global::System.String _AvailableCards;
        partial void OnAvailableCardsChanging(global::System.String value);
        partial void OnAvailableCardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlayerCards
        {
            get
            {
                return _PlayerCards;
            }
            set
            {
                OnPlayerCardsChanging(value);
                ReportPropertyChanging("PlayerCards");
                _PlayerCards = StructuralObject.SetValidValue(value, false, "PlayerCards");
                ReportPropertyChanged("PlayerCards");
                OnPlayerCardsChanged();
            }
        }
        private global::System.String _PlayerCards;
        partial void OnPlayerCardsChanging(global::System.String value);
        partial void OnPlayerCardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlayerLifeCards
        {
            get
            {
                return _PlayerLifeCards;
            }
            set
            {
                OnPlayerLifeCardsChanging(value);
                ReportPropertyChanging("PlayerLifeCards");
                _PlayerLifeCards = StructuralObject.SetValidValue(value, false, "PlayerLifeCards");
                ReportPropertyChanged("PlayerLifeCards");
                OnPlayerLifeCardsChanged();
            }
        }
        private global::System.String _PlayerLifeCards;
        partial void OnPlayerLifeCardsChanging(global::System.String value);
        partial void OnPlayerLifeCardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Player2Cards
        {
            get
            {
                return _Player2Cards;
            }
            set
            {
                OnPlayer2CardsChanging(value);
                ReportPropertyChanging("Player2Cards");
                _Player2Cards = StructuralObject.SetValidValue(value, false, "Player2Cards");
                ReportPropertyChanged("Player2Cards");
                OnPlayer2CardsChanged();
            }
        }
        private global::System.String _Player2Cards;
        partial void OnPlayer2CardsChanging(global::System.String value);
        partial void OnPlayer2CardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Player2LifeCards
        {
            get
            {
                return _Player2LifeCards;
            }
            set
            {
                OnPlayer2LifeCardsChanging(value);
                ReportPropertyChanging("Player2LifeCards");
                _Player2LifeCards = StructuralObject.SetValidValue(value, false, "Player2LifeCards");
                ReportPropertyChanged("Player2LifeCards");
                OnPlayer2LifeCardsChanged();
            }
        }
        private global::System.String _Player2LifeCards;
        partial void OnPlayer2LifeCardsChanging(global::System.String value);
        partial void OnPlayer2LifeCardsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlayerTurnId
        {
            get
            {
                return _PlayerTurnId;
            }
            set
            {
                OnPlayerTurnIdChanging(value);
                ReportPropertyChanging("PlayerTurnId");
                _PlayerTurnId = StructuralObject.SetValidValue(value, true, "PlayerTurnId");
                ReportPropertyChanged("PlayerTurnId");
                OnPlayerTurnIdChanged();
            }
        }
        private global::System.String _PlayerTurnId;
        partial void OnPlayerTurnIdChanging(global::System.String value);
        partial void OnPlayerTurnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardPits
        {
            get
            {
                return _CardPits;
            }
            set
            {
                OnCardPitsChanging(value);
                ReportPropertyChanging("CardPits");
                _CardPits = StructuralObject.SetValidValue(value, false, "CardPits");
                ReportPropertyChanged("CardPits");
                OnCardPitsChanged();
            }
        }
        private global::System.String _CardPits;
        partial void OnCardPitsChanging(global::System.String value);
        partial void OnCardPitsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EmptyHandDBModel", "FK_GameActualRound", "GameHeaders")]
        public EntityCollection<GameHeader> GameHeaders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GameHeader>("EmptyHandDBModel.FK_GameActualRound", "GameHeaders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GameHeader>("EmptyHandDBModel.FK_GameActualRound", "GameHeaders", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
